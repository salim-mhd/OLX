{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop; // istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n} // istanbul ignore next\n\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nvar _utils = require('./utils');\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _base = require('./base');\n\nvar _helpers = require('./helpers');\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _base.COMPILER_REVISION;\n\n  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {\n    return;\n  }\n\n  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {\n    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n        compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _exception2['default']('No environment passed to template');\n  }\n\n  if (!templateSpec || !templateSpec.main) {\n    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d; // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n\n  env.VM.checkRevision(templateSpec.compiler); // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n\n  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n    var optionsWithHooks = Utils.extend({}, options, {\n      hooks: this.hooks\n    });\n    var result = env.VM.invokePartial.call(this, partial, context, optionsWithHooks);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, optionsWithHooks);\n    }\n\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n\n        result = lines.join('\\n');\n      }\n\n      return result;\n    } else {\n      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  } // Just add water\n\n\n  var container = {\n    strict: function strict(obj, name) {\n      if (!(name in obj)) {\n        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj);\n      }\n\n      return obj[name];\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n\n      for (var i = 0; i < len; i++) {\n        if (depths[i] && depths[i][name] != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n    fn: function fn(i) {\n      var ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n\n      return programWrapper;\n    },\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n\n      return value;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var data = options.data;\n\n    ret._setup(options);\n\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context\n    /*, options*/\n    ) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      container.helpers = Utils.extend({}, env.helpers, options.helpers);\n\n      if (templateSpec.usePartial) {\n        container.partials = Utils.extend({}, env.partials, options.partials);\n      }\n\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n      }\n\n      container.hooks = {};\n      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n\n      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n\n      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _exception2['default']('must pass block params');\n    }\n\n    if (templateSpec.useDepths && !depths) {\n      throw new _exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var currentDepths = depths;\n\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\n\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  var currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  var partialBlock = undefined;\n\n  if (options.fn && options.fn !== noop) {\n    (function () {\n      options.data = _base.createFrame(options.data); // Wrapper function to get access to currentPartialBlock from the closure\n\n      var fn = options.fn;\n\n      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1]; // Restore the partial-block from the closure for the execution of the block\n        // i.e. the part inside the block of the partial call.\n\n        options.data = _base.createFrame(options.data);\n        options.data['partial-block'] = currentPartialBlock;\n        return fn(context, options);\n      };\n\n      if (fn.partials) {\n        options.partials = Utils.extend({}, options.partials, fn.partials);\n      }\n    })();\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _base.createFrame(data) : {};\n    data.root = context;\n  }\n\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    var props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n\n  return prog;\n}","map":{"version":3,"sources":["../../../lib/handlebars/runtime.js"],"names":[],"mappings":"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","sourcesContent":["import * as Utils from './utils';\nimport Exception from './exception';\nimport {COMPILER_REVISION, createFrame, LAST_COMPATIBLE_COMPILER_REVISION, REVISION_CHANGES} from './base';\nimport {moveHelperToHooks} from './helpers';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = compilerInfo && compilerInfo[0] || 1,\n        currentRevision = COMPILER_REVISION;\n\n  if (compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= COMPILER_REVISION) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n          compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception('Template was precompiled with an older version of Handlebars than the current runtime. ' +\n          'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception('Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n          'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n  }\n}\n\nexport function template(templateSpec, env) {\n\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let optionsWithHooks = Utils.extend({}, options, {hooks: this.hooks});\n\n    let result = env.VM.invokePartial.call(this, partial, context, optionsWithHooks);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, optionsWithHooks);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name) {\n      if (!(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj);\n      }\n      return obj[name];\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        if (depths[i] && depths[i][name] != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context/*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      container.helpers = Utils.extend({}, env.helpers, options.helpers);\n\n      if (templateSpec.usePartial) {\n        container.partials = Utils.extend({}, env.partials, options.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n      }\n\n      container.hooks = {};\n\n      let keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n\n    } else {\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nexport function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container,\n        context,\n        container.helpers, container.partials,\n        options.data || data,\n        blockParams && [options.blockParams].concat(blockParams),\n        currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(context, options = {}) {\n\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() { return ''; }\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n"]},"metadata":{},"sourceType":"script"}