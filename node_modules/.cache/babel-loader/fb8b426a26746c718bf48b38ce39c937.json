{"ast":null,"code":"/* global define */\n'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nvar SourceNode = undefined;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    var SourceMap = require('source-map');\n\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {}\n/* NOP */\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\n\n\nif (!SourceNode) {\n  SourceNode = function (line, column, srcFile, chunks) {\n    this.src = '';\n\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  SourceNode.prototype = {\n    add: function add(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n\n      this.src += chunks;\n    },\n    prepend: function prepend(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function toStringWithSourceMap() {\n      return {\n        code: this.toString()\n      };\n    },\n    toString: function toString() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (_utils.isArray(chunk)) {\n    var ret = [];\n\n    for (var i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty: function isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function prepend(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function push(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n  merge: function merge() {\n    var source = this.empty();\n    this.each(function (line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n  each: function each(iter) {\n    for (var i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n  empty: function empty() {\n    var loc = this.currentLocation || {\n      start: {}\n    };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function wrap(chunk) {\n    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || {\n      start: {}\n    } : arguments[1];\n\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n  functionCall: function functionCall(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n  quotedString: function quotedString(str) {\n    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n  objectLiteral: function objectLiteral(obj) {\n    var pairs = [];\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        var value = castChunk(obj[key], this);\n\n        if (value !== 'undefined') {\n          pairs.push([this.quotedString(key), ':', value]);\n        }\n      }\n    }\n\n    var ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n  generateList: function generateList(entries) {\n    var ret = this.empty();\n\n    for (var i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n  generateArray: function generateArray(entries) {\n    var ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n    return ret;\n  }\n};\nexports['default'] = CodeGen;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../../../../lib/handlebars/compiler/code-gen.js"],"names":[],"mappings":"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","sourcesContent":["/* global define */\nimport {isArray} from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return {code: this.toString()};\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || {start: {}};\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || {start: {}}) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return '\"' + (str + '')\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g, '\\\\\"')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n      .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = castChunk(obj[key], this);\n        if (value !== 'undefined') {\n          pairs.push([this.quotedString(key), ':', value]);\n        }\n      }\n    }\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n\n"]},"metadata":{},"sourceType":"script"}