{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.parse = parse; // istanbul ignore next\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n} // istanbul ignore next\n\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _whitespaceControl = require('./whitespace-control');\n\nvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\nvar _helpers = require('./helpers');\n\nvar Helpers = _interopRequireWildcard(_helpers);\n\nvar _utils = require('../utils');\n\nexports.parser = _parser2['default'];\nvar yy = {};\n\n_utils.extend(yy, Helpers);\n\nfunction parse(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  _parser2['default'].yy = yy; // Altering the shared object here, but this is ok as parser is a sync operation\n\n  yy.locInfo = function (locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  var strip = new _whitespaceControl2['default'](options);\n  return strip.accept(_parser2['default'].parse(input));\n}","map":{"version":3,"sources":["../../../../lib/handlebars/compiler/base.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAAmB,U;;;;iCACW,sB;;;;uBACL,W;;IAAb,OAAO,GAAA,uBAAA,CAAA,QAAA,C;;qBACI,U;;QAEd,M,GAAM,QAAA,CAAA,SAAA,C;AAEf,IAAI,EAAE,GAAG,EAAT;;AACA,MAAA,CAAA,MAAA,CAAO,EAAP,EAAW,OAAX;;AAEO,SAAS,KAAT,CAAe,KAAf,EAAsB,OAAtB,EAA+B;;AAEpC,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAAE,WAAO,KAAP;AAAe;;AAE/C,EAAA,QAAA,CAAA,SAAA,CAAA,CAAO,EAAP,GAAY,EAAZ,CAJoC,C;;AAOpC,EAAA,EAAE,CAAC,OAAH,GAAa,UAAS,OAAT,EAAkB;AAC7B,WAAO,IAAI,EAAE,CAAC,cAAP,CAAsB,OAAO,IAAI,OAAO,CAAC,OAAzC,EAAkD,OAAlD,CAAP;AACD,GAFD;;AAIA,MAAI,KAAK,GAAG,IAAA,mBAAA,CAAA,SAAA,CAAA,CAAsB,OAAtB,CAAZ;AACA,SAAO,KAAK,CAAC,MAAN,CAAa,QAAA,CAAA,SAAA,CAAA,CAAO,KAAP,CAAa,KAAb,CAAb,CAAP;AACD","sourcesContent":["import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parse(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') { return input; }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let strip = new WhitespaceControl(options);\n  return strip.accept(parser.parse(input));\n}\n"]},"metadata":{},"sourceType":"script"}