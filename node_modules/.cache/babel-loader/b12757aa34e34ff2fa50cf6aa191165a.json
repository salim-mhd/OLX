{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar walk = require('walk').walk;\n\nvar async = require('./async');\n\nfunction Instance(handlebars) {\n  if (!(this instanceof Instance)) {\n    return new Instance(handlebars);\n  } // expose handlebars, allows users to use their versions\n  // by overriding this early in their apps\n\n\n  var self = this;\n  self.handlebars = handlebars || require('handlebars').create(); // cache for templates, express 3.x doesn't do this for us\n\n  self.cache = {};\n  self.__express = middleware.bind(this); // DEPRECATED, kept for backwards compatibility\n\n  self.SafeString = this.handlebars.SafeString;\n  self.Utils = this.handlebars.Utils;\n}\n\n; // express 3.x template engine compliance\n\nfunction middleware(filename, options, cb) {\n  var self = this;\n  var cache = self.cache;\n  var handlebars = self.handlebars;\n  self.async = async(); // grab extension from filename\n  // if we need a layout, we will look for one matching out extension\n\n  var extension = path.extname(filename); // If passing the locals as data, create the handlebars options object now\n\n  var handlebarsOpts = self.__localsAsData ? {\n    data: options._locals\n  } : undefined; // render the original file\n  // cb(err, str)\n\n  function render_file(locals, cb) {\n    // cached?\n    var template = cache[filename];\n\n    if (template) {\n      try {\n        var res = template(locals, handlebarsOpts);\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id]);\n          });\n          cb(null, res);\n        });\n      } catch (err) {\n        cb(prependFilenameToError(filename, err));\n      }\n\n      return;\n    }\n\n    fs.readFile(filename, 'utf8', function (err, str) {\n      if (err) {\n        return cb(err);\n      }\n\n      var template = handlebars.compile(str);\n\n      if (locals.cache) {\n        cache[filename] = template;\n      }\n\n      try {\n        var res = template(locals, handlebarsOpts);\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id]);\n          });\n          cb(null, res);\n        });\n      } catch (err) {\n        cb(prependFilenameToError(filename, err));\n      }\n    });\n  } // render with a layout\n\n\n  function render_with_layout(filename, template, locals, cb) {\n    render_file(locals, function (err, str) {\n      if (err) {\n        return cb(err);\n      }\n\n      locals.body = str;\n\n      try {\n        var res = template(locals, handlebarsOpts);\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id]);\n          });\n          cb(null, res);\n        });\n      } catch (err) {\n        cb(prependFilenameToError(filename, err));\n      }\n    });\n  }\n\n  var layout = options.layout; // user did not specify a layout in the locals\n  // check global layout state\n\n  if (layout === undefined && options.settings && options.settings['view options']) {\n    layout = options.settings['view options'].layout;\n  } // user explicitly request no layout\n  // either by specifying false for layout: false in locals\n  // or by settings the false view options\n\n\n  if (layout !== undefined && !layout) {\n    return render_file(options, cb);\n  }\n\n  var view_dirs = options.settings.views;\n  var layout_filename = [].concat(view_dirs).map(function (view_dir) {\n    var view_path = path.join(view_dir, layout || 'layout');\n\n    if (!path.extname(view_path)) {\n      view_path += extension;\n    }\n\n    return view_path;\n  });\n\n  for (var i = 0; i < layout_filename.length; i++) {\n    var layout_template = cache[layout_filename[i]];\n\n    if (layout_template) {\n      return render_with_layout(layout_filename[i], layout_template, options, cb);\n    }\n  } // TODO check if layout path has .hbs extension\n\n\n  function prependFilenameToError(filename, err) {\n    // prepend to the message\n    if (typeof err.message === 'string') {\n      err.message = filename + ': ' + err.message;\n    }\n\n    return err;\n  }\n\n  function cacheAndCompile(filename, str) {\n    var layout_template = handlebars.compile(str);\n\n    if (options.cache) {\n      cache[filename] = layout_template;\n    }\n\n    render_with_layout(filename, layout_template, options, cb);\n  }\n\n  function tryReadFileAndCache(templates) {\n    var template = templates.shift();\n    fs.readFile(template, 'utf8', function (err, str) {\n      if (err) {\n        if (layout && templates.length === 0) {\n          // Only return error if user explicitly asked for layout.\n          return cb(err);\n        }\n\n        if (templates.length > 0) {\n          return tryReadFileAndCache(templates);\n        }\n\n        return render_file(options, cb);\n      }\n\n      cacheAndCompile(template, str);\n    });\n  }\n\n  tryReadFileAndCache(layout_filename);\n} // express 2.x template engine compliance\n\n\nInstance.prototype.compile = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  var template = this.handlebars.compile(str);\n  return function (locals) {\n    return template(locals, {\n      helpers: locals.blockHelpers,\n      partials: null,\n      data: null\n    });\n  };\n};\n\nInstance.prototype.registerHelper = function () {\n  this.handlebars.registerHelper.apply(this.handlebars, arguments);\n};\n\nInstance.prototype.registerPartial = function () {\n  this.handlebars.registerPartial.apply(this.handlebars, arguments);\n};\n\nInstance.prototype.registerPartials = function (directory, done) {\n  var handlebars = this.handlebars;\n\n  var register = function (filepath, done) {\n    var isValidTemplate = /\\.(html|hbs)$/.test(filepath);\n\n    if (!isValidTemplate) {\n      return done(null);\n    }\n\n    fs.readFile(filepath, 'utf8', function (err, data) {\n      if (!err) {\n        var ext = path.extname(filepath);\n        var templateName = path.relative(directory, filepath).slice(0, -ext.length).replace(/[ -]/g, '_').replace(/\\\\/g, '/');\n        handlebars.registerPartial(templateName, data);\n      }\n\n      done(err);\n    });\n  };\n\n  walk(directory).on('file', function (root, stat, next) {\n    register(path.join(root, stat.name), next);\n  }).on('end', done || function () {});\n};\n\nInstance.prototype.registerAsyncHelper = function (name, fn) {\n  var self = this;\n  self.handlebars.registerHelper(name, function () {\n    return self.async.resolve(fn, arguments);\n  });\n};\n\nInstance.prototype.localsAsTemplateData = function (app) {\n  // Set a flag to indicate we should pass locals as data\n  this.__localsAsData = true;\n\n  app.render = function (render) {\n    return function (view, options, callback) {\n      if (typeof options === \"function\") {\n        callback = options;\n        options = {};\n      } // Mix response.locals (options._locals) with app.locals (this.locals)\n\n\n      options._locals = options._locals || {};\n\n      for (var key in this.locals) {\n        options._locals[key] = this.locals[key];\n      }\n\n      return render.call(this, view, options, callback);\n    };\n  }(app.render);\n};\n\nmodule.exports = new Instance();\n\nmodule.exports.create = function (handlebars) {\n  return new Instance(handlebars);\n};","map":{"version":3,"sources":["C:/Users/H P/node_modules/hbs/lib/hbs.js"],"names":["fs","require","path","walk","async","Instance","handlebars","self","create","cache","__express","middleware","bind","SafeString","Utils","filename","options","cb","extension","extname","handlebarsOpts","__localsAsData","data","_locals","undefined","render_file","locals","template","res","done","values","Object","keys","forEach","id","replace","err","prependFilenameToError","readFile","str","compile","render_with_layout","body","layout","settings","view_dirs","views","layout_filename","concat","map","view_dir","view_path","join","i","length","layout_template","message","cacheAndCompile","tryReadFileAndCache","templates","shift","prototype","helpers","blockHelpers","partials","registerHelper","apply","arguments","registerPartial","registerPartials","directory","register","filepath","isValidTemplate","test","ext","templateName","relative","slice","on","root","stat","next","name","registerAsyncHelper","fn","resolve","localsAsTemplateData","app","render","view","callback","key","call","module","exports"],"mappings":"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","sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar walk = require('walk').walk;\n\nvar async = require('./async');\n\nfunction Instance(handlebars) {\n  if (!(this instanceof Instance)) {\n    return new Instance(handlebars);\n  }\n\n  // expose handlebars, allows users to use their versions\n  // by overriding this early in their apps\n  var self = this;\n\n  self.handlebars = handlebars || require('handlebars').create();\n\n  // cache for templates, express 3.x doesn't do this for us\n  self.cache = {};\n\n  self.__express = middleware.bind(this);\n\n  // DEPRECATED, kept for backwards compatibility\n  self.SafeString = this.handlebars.SafeString;\n  self.Utils = this.handlebars.Utils;\n};\n\n// express 3.x template engine compliance\nfunction middleware(filename, options, cb) {\n  var self = this;\n  var cache = self.cache;\n  var handlebars = self.handlebars;\n\n  self.async = async();\n\n  // grab extension from filename\n  // if we need a layout, we will look for one matching out extension\n  var extension = path.extname(filename);\n\n  // If passing the locals as data, create the handlebars options object now\n  var handlebarsOpts = (self.__localsAsData) ? { data: options._locals } : undefined;\n\n  // render the original file\n  // cb(err, str)\n  function render_file(locals, cb) {\n    // cached?\n    var template = cache[filename];\n    if (template) {\n      try {\n        var res = template(locals, handlebarsOpts)\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id])\n          })\n\n          cb(null, res)\n        })\n      } catch (err) {\n        cb(prependFilenameToError(filename, err))\n      }\n\n      return\n    }\n\n    fs.readFile(filename, 'utf8', function(err, str){\n      if (err) {\n        return cb(err);\n      }\n\n      var template = handlebars.compile(str);\n      if (locals.cache) {\n        cache[filename] = template;\n      }\n\n      try {\n        var res = template(locals, handlebarsOpts);\n        self.async.done(function(values) {\n          Object.keys(values).forEach(function(id) {\n            res = res.replace(id, values[id]);\n          });\n\n          cb(null, res);\n        });\n      } catch (err) {\n        cb(prependFilenameToError(filename, err))\n      }\n    });\n  }\n\n  // render with a layout\n  function render_with_layout (filename, template, locals, cb) {\n    render_file(locals, function(err, str) {\n      if (err) {\n        return cb(err);\n      }\n\n      locals.body = str;\n\n      try {\n        var res = template(locals, handlebarsOpts)\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id])\n          })\n\n          cb(null, res)\n        })\n      } catch (err) {\n        cb(prependFilenameToError(filename, err))\n      }\n    });\n  }\n\n  var layout = options.layout;\n\n  // user did not specify a layout in the locals\n  // check global layout state\n  if (layout === undefined && options.settings && options.settings['view options']) {\n    layout = options.settings['view options'].layout;\n  }\n\n  // user explicitly request no layout\n  // either by specifying false for layout: false in locals\n  // or by settings the false view options\n  if (layout !== undefined && !layout) {\n    return render_file(options, cb);\n  }\n\n  var view_dirs = options.settings.views;\n\n  var layout_filename = [].concat(view_dirs).map(function (view_dir) {\n    var view_path = path.join(view_dir, layout || 'layout');\n\n    if (!path.extname(view_path)) {\n      view_path += extension;\n    }\n\n    return view_path;\n  });\n\n  for (var i = 0; i < layout_filename.length; i++) {\n    var layout_template = cache[layout_filename[i]]\n\n    if (layout_template) {\n      return render_with_layout(layout_filename[i], layout_template, options, cb)\n    }\n  }\n\n  // TODO check if layout path has .hbs extension\n\n  function prependFilenameToError (filename, err) {\n    // prepend to the message\n    if (typeof err.message === 'string') {\n      err.message = filename + ': ' + err.message\n    }\n\n    return err\n  }\n\n  function cacheAndCompile(filename, str) {\n    var layout_template = handlebars.compile(str);\n    if (options.cache) {\n      cache[filename] = layout_template;\n    }\n\n    render_with_layout(filename, layout_template, options, cb)\n  }\n\n  function tryReadFileAndCache(templates) {\n    var template = templates.shift();\n\n    fs.readFile(template, 'utf8', function(err, str) {\n      if (err) {\n        if (layout && templates.length === 0) {\n          // Only return error if user explicitly asked for layout.\n          return cb(err);\n        }\n\n        if (templates.length > 0) {\n          return tryReadFileAndCache(templates);\n        }\n\n        return render_file(options, cb);\n      }\n\n      cacheAndCompile(template, str);\n    });\n  }\n\n  tryReadFileAndCache(layout_filename);\n}\n\n// express 2.x template engine compliance\nInstance.prototype.compile = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  var template = this.handlebars.compile(str);\n  return function (locals) {\n    return template(locals, {\n      helpers: locals.blockHelpers,\n      partials: null,\n      data: null\n    });\n  };\n};\n\nInstance.prototype.registerHelper = function () {\n  this.handlebars.registerHelper.apply(this.handlebars, arguments);\n};\n\nInstance.prototype.registerPartial = function () {\n  this.handlebars.registerPartial.apply(this.handlebars, arguments);\n};\n\nInstance.prototype.registerPartials = function (directory, done) {\n  var handlebars = this.handlebars;\n\n  var register = function(filepath, done) {\n    var isValidTemplate = /\\.(html|hbs)$/.test(filepath);\n\n    if (!isValidTemplate) {\n      return done(null);\n    }\n\n    fs.readFile(filepath, 'utf8', function(err, data) {\n      if (!err) {\n        var ext = path.extname(filepath);\n        var templateName = path.relative(directory, filepath)\n          .slice(0, -(ext.length)).replace(/[ -]/g, '_')\n          .replace(/\\\\/g, '/')\n        handlebars.registerPartial(templateName, data);\n      }\n\n      done(err);\n    });\n  };\n\n  walk(directory).on('file', function(root, stat, next) {\n    register(path.join(root, stat.name), next);\n  }).on('end', done || function() {});\n\n};\n\nInstance.prototype.registerAsyncHelper = function(name, fn) {\n  var self = this;\n  self.handlebars.registerHelper(name, function() {\n    return self.async.resolve(fn, arguments);\n  });\n};\n\nInstance.prototype.localsAsTemplateData = function(app) {\n  // Set a flag to indicate we should pass locals as data\n  this.__localsAsData = true;\n\n  app.render = (function(render) {\n    return function(view, options, callback) {\n      if (typeof options === \"function\") {\n        callback = options;\n        options = {};\n      }\n\n      // Mix response.locals (options._locals) with app.locals (this.locals)\n      options._locals = options._locals || {};\n      for (var key in this.locals) {\n        options._locals[key] = this.locals[key];\n      }\n\n      return render.call(this, view, options, callback);\n    };\n  })(app.render);\n};\n\nmodule.exports = new Instance();\nmodule.exports.create = function(handlebars) {\n  return new Instance(handlebars);\n};\n"]},"metadata":{},"sourceType":"script"}